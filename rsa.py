# https://leonuz.github.io/blog/SECRET-CONVE.RSA.TIONS/
from Crypto.Util.number import inverse
import binascii

'''
(from
https://54m4ri74n.medium.com/rsa-algorithm-mathematical-explanation-93f34ecef02a:)

Encryption: M is plaintext; e is public exponent, n is product of two large
primes
    M < n
    C = M^e, mod n

Decryption: C is ciphertext; d is private key; n is the same product as before
    C
    M = C^d, mod n
'''

# Prime factors of n
p = 72539188337409048434517657668785982436503618029818802387833126880251213106684983301847459281756173872849655980341983435213476251581941251979385718844779768486519862521371761417707655650528352916168732086751886502287478577426433344249124093776641317837723657300923622528678618140782421245730805689484709681027
q = 72539188337409048434517657668785982436503618029818802387833126880251213106684983301847459281756173872849655980341983435213476251581941251979385718844779855101287148374206957436458915587712518501281793789555480805845328694482152421962093714097210685267495028743960484986044572019270471629952251128834754752071

# n itself
n = p * q

# Ciphertext
c = 176955087574615470063741472647197409875117482285309340581271852382710990213049325727125711804231234813146490233229473679126800639397642380073858980601348297248196895714845780751708931869367483971257602632592317987276609144131149239628356913355893753937582033295526684103570648143766629320982809943886265840131929175495923219383837739522744946987913271495217642469261483099144404131616847257182856944641353523297845726161862062019653065904612865722942649827600090466968124488518262272506900322544403300651512798674316560281124899873116026534973842919190849918357740307152880452169695889599662477611952919511642717417

# Exponent
e = 65537

# Totient function: the number of positive integers no greater than n that are
# relatively prime to n
phi = (q - 1) * (p - 1)

# Private key
d = inverse(e, phi)

# Decrypted message
m = pow(c, d, n)

print(m)
